* {
  /* resetando todos os seletores e atribuindo as caixas de acordo com a borda */
  margin: 0;
  padding: 0;
  box-sizing: border-box;
}

:root{
  --textColor: white;
  --bgUrl:  url(./assets/bg-mobile.jpg);
  --strokeColor: rgba(255, 255, 255, 0.5);
  --surfaceColor: rgba(255,255,255,0.05);
  --surfaceColorHover: rgba(0, 0, 0, 0.02);
  --highlightColor: rgba(255, 255, 255, 0.2);
  --switchBgUrl: url(./assets/moon-stars.svg);
}

.light{
  --textColor: black;
  --bgUrl: url(./assets/bg-mobile-light.jpg);
  --strokeColor: rgba(0,0,0, 0.5);
  --surfaceColor: rgba(0,0,0,0.05);
  --surfaceColorHover: rgba(0,0,0,0.02);
  --highlightColor: rgba(0, 0, 0, 0.1);
  --switchBgUrl: url(./assets/sun.svg);
}

body {
  /* background-image: url(./assets/bg-mobile.jpg);
  background-repeat: no-repeat;
  background-position: top center;
  background-size: cover; */

  /* background: color image repeat position/size; */
  background: var(--bgUrl) no-repeat top center/cover;
  height: 100vh;
}

body * {
  font-family: "Inter", sans-serif;
  color: var(--textColor);
}

#container {
  width: 100%;
  max-width: 588px;
  margin: 56px auto 0px;
  padding: 0 24px;
  /* o "margin" e o" padding" trabalha todos os lados em direcao horario (top right bottom left), porem se colocar 1 argumento serve pra todos (top right bottom left), 2 argumentos (top-bottom) e (right left), 3 argumentos (top), (left -right) e (bottom).*/
}

#profile {
  text-align: center;
}

#profile img {
  width: 112px;
  /* como o elemento img tem um "display: inline;" subentendido o "margin: auto;"" nao funciona
  uma forma de resolver é alterando para "display: block ;" ou criado um atributo para o pai 
  onde ele contenha o "text-align: center;" 
  margin: auto; */
}

#profile p {
  font-weight: 500;
  line-height: 24px;
  margin: 8px;
}

/*switch*/
#switch{
  position: relative;
  width: 64px;
  margin: 4px auto;
}

#switch button{
  width: 32px;
  height: 32px;
  background: white  var(--switchBgUrl) no-repeat center;
  border: 0;
  border-radius: 50%;
  position: absolute;
  top: 50%;
  transform: translateY(-50%);
  z-index: 1;

}

.light #switch button{
  right: 0;
  /* left: initial; */

}


#switch span{
  display: block;
  width: 64px;
  height: 24px;
  background: var(--surfaceColor);
  border: 1px solid var(--strokeColor);
  backdrop-filter: blur(4px);
  -webkit-backdrop-filter: blur(4px);
  border-radius: 9999px;

}

/* lista */

ul {
   list-style: none; /*tirar os pontos da lista */
   display: flex;
   flex-direction: column;
   gap: 16px;
   padding: 24px 0px;
}

ul li a {
  border: 1px solid var(--strokeColor);
  border-radius: 8px;
  display: flex; /*tornar os elementos dentro distribuidos de forma flexivel */
  /* gap: 8px;   espaço entre os elementos */
  align-items: center; /*alinha os conteudo no centro da caixa*/
  justify-content: center;
  padding: 16px 24px;
  background: var(--surfaceColor);
  backdrop-filter: blur(4px);
  -webkit-backdrop-filter: blur(4px); /* embassar o elemento prefixo "-webkit-" usado por causa de outros browsers como safari*/
  text-decoration: none;
  font-weight: 500;
  transition: background .4s;
  

}

/*pseudo selector houver = passar o mouse em cima*/
ul li a:hover{
  background: var(--surfaceColorHover);
  border: 1.5px solid var(--textColor);
}

/* social links*/

#social-links{
  display: flex;
  justify-content: center;
  /* gap: 32px; */
  padding: 24px 0px;
  font-size: 24px;
}

#social-links a{
  display: flex;
  align-items: center;
  justify-content: center;
  padding: 16px;
  border-radius: 50%;
  transition: background 0.2s;
}

#social-links a:hover{
  background: var(--highlightColor);
}

footer {
  padding: 24px 0px;
  text-align: center;
  font-size: 14px;
}

/*medua queries*/

@media(min-width: 700px) {
  :root{
    --bgUrl: url(./assets/bg-desktop.jpg);
  }
  .light{
     --bgUrl: url(./assets/bg-desktop-light.jpg);
  }
  /* so funciona com a meta viwport no documento html  */
}